#######################################################################################
# KM documentation for extension points and controller hooks
#
# IMPORTANT NOTE: This file MUST be saved in UTF-8 encoding! 
#                 This encoding is enforced when reading the file.
#
# See also: 
#            https://en.wikipedia.org/wiki/.properties
#            http://docs.oracle.com/javase/6/docs/api/java/util/Properties.html#load(java.io.Reader) 
# 
# This file must follow the Java properties format:
# <key> = <text>
# where
# <key> denoting the key of the extension point or controller hook.
# 
# <text> stating the actual text or description. Java properties allow only for one line per key!
# 
# When entering the text, consider the following:
# 
# Always start the text with a verb, such as “Allows you to …”, “Adds columns to…”.
# 
# For readability, the text can be multiple lines if the line ends with a backslash
# Example:
#
# com.siemens.tableViewer.view.Main.siemensUiHeaderExtension1 = Allows you to add additional fields 
# in the page header, before the Input Parameters section
#
# which will lead to the same final result. 
#
# NOTE: Lines containing such a line break will NOT show up with these line breaks when the final result
# is parsed. See section below on how to enforce line breaks in the final text.
#
#######################################################################################
#
#                Enforcing line breaks in the generated document
#
# If one wishes to enforce line breaks in the final document, this must be done
# by inserting \n (backslash + 'n') into the message. These points will be 
# recognized as line breaks.
# One can combine this with properties line breaks for readability (\n\) and continue on
# the next line.
#  
#######################################################################################

 com.siemens.tableViewer.view.Main.siemensUiHeaderExtension1 = Allows you to add additional fields in the page header, before the Input Parameters section
 com.siemens.tableViewer.view.Main.siemensUiHeaderExtension2 = Allows you to add additional fields in the page header, after the Input Parameters section
 com.siemens.tableViewer.view.Main.siemensUiPageExtension1 = Allows you to add additional fields before the FilterBar in the page
 com.siemens.tableViewer.view.Main.siemensUiPageExtension2 = Allows you to add additional fields after the FilterBar in the page
 com.siemens.tableViewer.view.Main.siemensUiTabExtension1 = Allows you to add additional fields before the first Tab (Table) in the IconTabBar
 com.siemens.tableViewer.view.Main.siemensUiTabExtension2 = Allows you to add additional fields before the second Tab (Chart) in the IconTabBar
 com.siemens.tableViewer.view.Main.siemensUiTabExtension3 = Allows you to add additional fields before the third Tab (TreeXS) in the IconTabBar
 com.siemens.tableViewer.view.Main.siemensUiTabExtension4 = Allows you to add additional fields before the fourth Tab (Tree) in the IconTabBar
 com.siemens.tableViewer.view.Main.siemensUiTabExtension5 = Allows you to add additional fields before the fifth Tab (Mix) in the IconTabBar

 com.siemens.tableViewer.controller.Table~extHookOnTableDataReceived = @ControllerHook Adaptation of Table view \n\
 This method is called after the table data has been loaded to be shown on the table view\n\
 @callback com.siemens.tableViewer.controller.Table~extHookOnTableDataReceived\n\
 @param {object} oEvent Event data\n\
 @return {void}\n\

 com.siemens.tableViewer.controller.Tree~extHookOnTreeDataReceived = @ControllerHook Adaptation of Tree view \n\
 This method is called after the tree data has been loaded to be shown on the tree view\n\
 @callback com.siemens.tableViewer.controller.Tree~extHookOnTreeDataReceived\n\
 @param {object} oEvent Event data\n\
 @return {void}\n\

 com.siemens.tableViewer.controller.TreeXS~extHookOnTreeXsDataReceived = @ControllerHook Adaptation of Tree XS view \n\
 This method is called after the tree data has been loaded to be shown on the tree XS view\n\
 @callback com.siemens.tableViewer.controller.TreeXS~extHookOnTreeXsDataReceived\n\
 @param {object} oEvent Event data\n\
 @return {void}\n\

 com.siemens.tableViewer.controller.Table~extHookOnFilterDataReceived = @ControllerHook Adaptation of FilterBar view \n\
 This method is called after the filter bar data has been loaded to be shown on the filter view\n\
 @callback com.siemens.tableViewer.controller.Table~extHookOnFilterDataReceived\n\
 @param {object} oData data response\n\
 @return {void}\n\

 com.siemens.tableViewer.controller.FilterBar~extHookFilterItemFactory = @ControllerHook Adaptation of FilterBar view \n\
 This method is called when the filters are being created in the FilterBar \n\
 @callback com.siemens.tableViewer.controller.FilterBar~extHookFilterItemFactory\n\
 @param {void} \n\
 @return {void}\n\

 com.siemens.tableViewer.controller.Chart~extHookOnChartDataReceived = @ControllerHook Adaptation of chart view \n\
 This method is called after the chart data of the requested chart id has been loaded to be shown on the chart view\n\
 @callback com.siemens.tableViewer.controller.Chart~extHookOnChartDataReceived\n\
 @param {object} oData data response\n\
 @return {void}\n\


 com.siemens.tableViewer.controller.Main~extHookOnInitFilter = @ControllerHook Adaptation of main view \n\
 This method is called inside the init method of the main view controller \n\
 @callback com.siemens.tableViewer.controller.Main~extHookOnInitFilter\n\
 @return {void}\n\